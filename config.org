#+title: Tucho's Emacs configuration
#+author: Tucho (Marcel Campello)

* Ancillary macros and functions

Macros to enable and disable modes.
#+begin_src emacs-lisp
  (defmacro set-mode (mode value)
    "Call a '-mode' function with 'value' as its argument, if this function exists."
    `(when (fboundp ',mode)
       (funcall ',mode ,value)))

  (defmacro enable (mode)
    "Call the '-mode' function with 1 as its argument, thus enabling this mode."
    `(set-mode ,mode 1))

  (defmacro disable (mode)
    "Call the '-mode' function with -1 as its argument, thus disabling this mode."
    `(set-mode ,mode -1))
#+end_src

Function to expand a file contained in the Emacs configuration directory.
#+begin_src emacs-lisp
  (defun emacs-d (filename)
    "Expand FILENAME relative to 'user-emacs-directory'."
    (expand-file-name filename user-emacs-directory))
#+end_src

Function to reload the entire Emacs configuration.
#+begin_src emacs-lisp
  (defun reload-emacs-config ()
    "Reload the init.el file, thus 'rerunnig' all the configuration."
    (interactive)
    (load-file (emacs-d "init.el"))
    (message "configuration reloaded"))
#+end_src

* Tweak user interface

Do not show the startup screen.
#+begin_src emacs-lisp
  (setq inhibit-startup-screen t)
#+end_src

Remove distracting elements.
#+begin_src emacs-lisp
  (disable menu-bar-mode)
  (disable tool-bar-mode)
  (disable scroll-bar-mode)
  (disable horizontal-scroll-bar-mode)
#+end_src

Allow frames to be resized pixelwise.
#+begin_src emacs-lisp
  (setq frame-resize-pixelwise t)
#+end_src

Maximize frame.
#+begin_src emacs-lisp
  (add-to-list 'default-frame-alist '(fullscreen . maximized))
#+end_src

Configure fonts.
#+begin_src emacs-lisp
  (set-face-attribute 'default nil
                      :family "Hurmit Nerd Font Mono"
                      :height 100)
#+end_src

Tooltips config.
#+begin_src emacs-lisp
  (setq use-system-tooltips nil)
#+end_src

* Line numbering and highlighting

Highlight the current line.
#+begin_src emacs-lisp
  (enable global-hl-line-mode)
#+end_src

Show line numbers.
#+begin_src emacs-lisp
  (setq display-line-numbers-width-start t)
  (enable global-display-line-numbers-mode)
#+end_src

Configure mode line to show point's current line and column numbers.
#+begin_src emacs-lisp
  (setq mode-line-position-column-line-format '(" %l,%C" ))
  (enable line-number-mode)
  (enable column-number-mode)
#+end_src

* Disable auto-save and backup

Disable auto-save files (those like #filename#).
#+begin_src emacs-lisp
  (setq auto-save-default nil)
  (setq auto-save-list-file-prefix nil)
#+end_src

Disable backup files (those like filename~).
#+begin_src emacs-lisp
  (setq make-backup-files nil)
#+end_src

* Tweak ~*scratch*~ buffer

Start with a clean the scratch buffer.
#+begin_src emacs-lisp
  (setq initial-scratch-message nil)
#+end_src

Make the scratch buffer unkillable.
#+begin_src emacs-lisp
  (defun dont-kill-but-bury-scratch ()
    (if (equal (buffer-name (current-buffer))
               "*scratch*")
        (progn
          (bury-buffer)
          nil)
      t))

  (add-hook 'kill-buffer-query-functions 'dont-kill-but-bury-scratch)
#+end_src

* Configure indentation and tabulation

Make indentation space-only and tabulation 4-space wide.
#+begin_src emacs-lisp
  (setq-default indent-tabs-mode nil)
  (setq-default tab-width 4)
#+end_src

* Set coding system

Set UTF-8 as the coding system for:
- newly created buffers;
- subprocess I/O;
- file names;
- terminal;
- keyboard.
#+begin_src emacs-lisp
  (set-default-coding-systems 'utf-8)
#+end_src

* Configure ~package~ and ~use-package~

I am going to use ~package~ as the package manager and ~use-package~ for package configuration.

** Configure ~package~

Require ~package~.
#+begin_src emacs-lisp
  (require 'package)
#+end_src

Prevent it from messing with ~init.el~.
#+begin_src emacs-lisp
  (setq package--init-file-ensured t)
  (setq custom-file (emacs-d "custom-file.el"))
  (when (file-exists-p custom-file)
    (load custom-file))
#+end_src

Configure archives.
#+begin_src emacs-lisp
  (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/"))
  (setq package-archive-priorities '(("melpa" . 20)
                                     ("gnu" . 10)))
#+end_src

** Configure ~use-package~

Require and configure ~use-package~. Enable ~always-ensure~ feature.
#+begin_src emacs-lisp
  (eval-when-compile
    (require 'use-package))

  (use-package use-package

    :config
    (use-package use-package-ensure)

    :custom
    (use-package-always-ensure t))
#+end_src

Install ~bind-key~ (needed to use the ~:bind~ keyword in ~use-package~).
#+begin_src emacs-lisp
  (use-package bind-key)
#+end_src
